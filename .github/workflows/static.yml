# Simple workflow for deploying static content to GitHub Pages
# blog.azy.solutions

name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["develop"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    runs-on: ubuntu-latest
    env:
      SITE_TEST_URL: "https://fsebbah.github.io/new-azy.solutions/"  # URL de test pour le blog azy.solutions
      SITE_PROD_URL: "https://azy.solutions/"  # URL de production pour le blog azy.solutions
      SITE_BLOG_PROD_URL: "https://blog.azy.solutions/"  # URL de production pour le blog azy.solutions
      SITE_BLOG_TEST_URL: "https://fsebbah.github.io/new-blog_azy.solutions/"  # URL de test pour le blog azy.solutions
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Set environment URLs
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "SITE_URL=${{ env.SITE_PROD_URL }}" >> $GITHUB_ENV
          else
            echo "SITE_URL=${{ env.SITE_TEST_URL }}" >> $GITHUB_ENV
          fi
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "SITE_BLOG_URL=${{ env.SITE_BLOG_PROD_URL }}" >> $GITHUB_ENV
          else
            echo "SITE_BLOG_URL=${{ env.SITE_BLOG_TEST_URL }}" >> $GITHUB_ENV
          fi
          source $GITHUB_ENV                    
          echo "Using SITE_URL: $SITE_URL"
          find . -name "*.html" -exec sed -i "s|__SITE_URL__|$SITE_URL|g" {} +
          find . -name "*.html" -exec sed -i "s|__SITE_BLOG_URL__|$SITE_BLOG_URL|g" {} +

      - name: Check script.js existence
        run: |
          if [ -f ./scripts/main.js ]; then
            echo "main.js found."
          else
            echo "main.js not found."
            exit 1
          fi
          if [ -f ./scripts/blog.js ]; then
            echo "blog.js found."
          else
            echo "blog.js not found."
            exit 1
          fi
        
      - name: Install minimization tools
        run: |
          npm install terser cssnano-cli html-minifier --save-dev

      - name: Debug installed packages
        run: |
          npm list terser
          npm list cssnano-cli
          npm list html-minifier

      - name: Minify JavaScript
        run: |
          npx terser ./scripts/main.js -o ./scripts/main.min.js --compress --mangle
          npx terser ./scripts/blog.js -o ./scripts/blog.min.js --compress --mangle
  
      - name: Minify CSS
        run: |
          npx cssnano ./styles/style.css ./styles/style.min.css

      - name: Remove CSS
        run: |
          rm ./styles/style.css  # Supprimer l'original

      - name: Minify HTML and Remove JS
        run: |
          find . -name "*.html" -exec html-minifier --collapse-whitespace --remove-comments --minify-js true --minify-css true -o {} {} \;
          rm ./scripts/main.js  # Supprimer l'original
          rm ./scripts/blog.js  # Supprimer l'original
  
      - name: Verify main.js removal
        run: |
          if [ -f ./scripts/main.js ]; then
            echo "Error: main.js still exists"
            exit 1
          else
            echo "main.js successfully removed"
          fi

      - name: Verify blog.js removal
        run: |
          if [ -f ./scripts/blog.js ]; then
            echo "Error: blog.js still exists"
            exit 1
          else
            echo "blog.js successfully removed"
          fi

      - name: Verify style.css removal
        run: |
          if [ -f ./styles/style.css ]; then
            echo "Error: style.css still exists"
            exit 1
          else
            echo "style.css successfully removed"
          fi
      - name: Update HTML references to minified files
        run: |
          find . -name "*.html" -exec sed -i 's|scripts/main.js|scripts/main.min.js|g' {} +
          find . -name "*.html" -exec sed -i 's|scripts/blog.js|scripts/blog.min.js|g' {} +
          find . -name "*.html" -exec sed -i 's|styles/style.css|styles/style.min.css|g' {} +
    
      - name: Verify main.min.js exists
        run: |
          if [ -f ./scripts/main.min.js ]; then
            echo "Success: main.min.js exists!!!"
          else
            echo "Error: main.min.js doesnt exist."
            exit 1
          fi

      - name: Verify blog.min.js exists
        run: |
          if [ -f ./scripts/blog.min.js ]; then
            echo "Success: blog.min.js exists!!!"
          else
            echo "Error: blog.min.js doesnt exist."
            exit 1
          fi
  
      - name: Verify style.min.css exists
        run: |
          if [ -f ./styles/style.min.css ]; then
            echo ": Success style.min.css exists!!!"
          else
            echo "Error style.min.css doesnt exist."
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository, now minimized
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
